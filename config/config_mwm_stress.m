classdef config_mwm_stress < config_mwm
    % config_mwm Global constants
    properties(Constant)                
        % relation between animal ids and groups 
        % (1 = control, 2 = stress, 3 = control + modified diet, 4 = stress
        % + modified diet)
        TRAJECTORY_GROUPS = {...
                 %1st set   
                [87, 1; 91, 1; 93, 1; 95, 1; 99, 1; 101, 1; 103, 1; ...
                 114, 1; 115, 1; 121, 1; 88, 2; 90, 2; 98, 2; 100, 2; ...  
                 104, 2; 106, 2; 108, 2; 113, 2; 118, 2; 122, 2], ...
                 % 2nd set
                [43, 1; 49, 1; 52, 1; 57, 1; 59, 1; 65, 1; 75, 1; ...
                 82, 1; 44, 2; 50, 2; 53, 2; 58, 2; 60, 2; 67, 2; ...
                 71, 2; 76, 2; 78, 2; 83, 2], ...
                 % 3rd set
                [50, 1; 61, 1; 67, 1; 71, 1; 75, 1; 83, 1; 90, 1; ...
                 94, 1; 100, 1; 111, 1; 52, 2; 57, 2; 63, 2; 69, 2; ...
                 73, 2; 81, 2; 92, 2; 96, 2; 102, 2; 107, 2; 51, 3; ...
                 55, 3; 56, 3; 62, 3; 68, 3; 74, 3; 82, 3; 91, 3; 95, 3; ...
                 106, 3; 53, 4; 58, 4; 64, 4; 72, 4; 76, 4; 84, 4; 97, 4; ...
                 103, 4; 108, 4; 113, 4] ...
         };                      
                                                                    
        COMMON_SETTINGS = { ...
            'Sessions', 3, ...  
            'TrialsPerSession', [4 4 4], ...
            'TrialType', repmat(1, 1, 12), ...                          
            'TrialTypesDescription', {'Training'}, ...                        
            'GroupsDescription', {'Control', 'Stress', 'Control/Food', 'Stress/Food'} ...                                             
        };
        COMMON_PROPERTIES = { ...
            'TRIAL_TIMEOUT ', 90, ...
            'CENTRE_X', 0, ...
            'CENTRE_Y', 0, ...
            'ARENA_R', 100, ...
            'PLATFORM_X', -50, ...
            'PLATFORM_Y', 10, ...
            'PLATFORM_R', 6, ...               
            'PLATFORM_PROXIMITY_RADIUS', 30, ...
            'LONGEST_LOOP_EXTENSION', 40 ...        
        };
        
        CONFIGURATIONS = { ...
            { 'Full trajectories', {}, {}}, ...
            { '250cm constant segmentiation', { ...
                'SegmentationFunction', base_config.SEGMENTATION_CONSTANT_LENGTH}, ...
                { 'SEGMENT_LENGTH', 250, ... 
                  'SEGMENT_OVERLAP', .9 ...
                } ...
            } ...
        };
    end
    
    methods    
        function inst = config_mwm_stress(desc, num_config)
            param = config_mwm_stress.CONFIGURATIONS{num_config};
             other_settings = param{2};
             prop = param{3};
             common = config_mwm_stress.COMMON_SETTINGS;
             common_prop = config_mwm_stress.COMMON_PROPERTIES;
             
             inst@config_mwm(desc, ...
                 common{:}, other_settings{:}, ...
                 'Properties', [common_prop, prop] ...
             );                                               
        end
                
      % Imports trajectories from Noldus data file's
        function traj = load_data(inst, path, varargin)
            addpath(fullfile(fileparts(mfilename('fullpath')), '/mwm/noldus'));
            traj = load_trajectories_ethovision(inst, [path '/' 'set1'], 1, [path '/' 'screenshots/set1'], 'DeltaX', -100, 'DeltaY', -100);
            traj = traj.append(load_trajectories_ethovision(inst, [path '/' 'set2'], 2, [path '/screenshots/set2'], 'DeltaX', -100, 'DeltaY', -100));
            traj = traj.append(load_trajectories_ethovision(inst, [path '/' 'set3'], 3, [path '/screenshots/set3'], 'DeltaX', -100, 'DeltaY', -100));
        end              
    end
end

